name: React CI

on:
  push:
    branches:
      - "main"
      
  workflow_dispatch:
  
jobs:
  setup:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]
        
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
        
      - name: build 
        run: npm run build --if-present
        
      # Share artifact inside workflow
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-build
          path: build

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:       
      - uses: actions/checkout@v2
      - name: Lint & fix  
        run: npx standard -v --fix

          

  codeql:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
            wget -q https://github.com/github/codeql-cli-binaries/releases/download/v2.12.3/codeql-linux64.zip
            unzip codeql-linux64.zip
              
      - name: CodeQL for js  
        run: |
           ./codeql/codeql pack download codeql/javascript-queries
           ./codeql/./codeql database create -l javascript ./db -s src/
             
      - name: CodeQL analysis 
        run: ./codeql/./codeql database analyze --format=CSV --output=output.csv db
      
  deploy:
    runs-on: ubuntu-latest
    # When application is successfully tested and build has been generated
    # Then we can start with deployment
    needs: setup
    steps:
    
      # Download previously shared build
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: react-github-actions-build
          
      # Set the credentials from repository settings/secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'
          
      # Copy the files from build folder to the S3 bucket
      - name: Deploy to S3
        run: aws s3 sync . s3://github-demo-1-per-day --acl public-read
        working-directory: react-github-actions-build
        
      
          

